<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.2" created="2013-10-16 18:44" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Ümit Ünal</title>
	<link>http://www.umitunal.net</link>
	<description>@  Software Engineer</description>
	<pubDate>Wed, 16 Oct 2013 18:44:41 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.umitunal.net</wp:base_site_url>
	<wp:base_blog_url>http://www.umitunal.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>umit.unal.89@gmail.com</wp:author_email><wp:author_display_name><![CDATA[umitunal]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>maven</wp:category_nicename><wp:category_parent>java</wp:category_parent><wp:cat_name><![CDATA[Maven]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>mongo</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Mongo]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>spring</wp:category_nicename><wp:category_parent>java</wp:category_parent><wp:cat_name><![CDATA[Spring]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>configuration</wp:tag_slug><wp:tag_name><![CDATA[configuration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>hazelcast</wp:tag_slug><wp:tag_name><![CDATA[hazelcast]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>java-2</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>maven-2</wp:tag_slug><wp:tag_name><![CDATA[maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>method-chaining</wp:tag_slug><wp:tag_name><![CDATA[method chaining]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>spring-2</wp:tag_slug><wp:tag_name><![CDATA[spring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>spring-profile</wp:tag_slug><wp:tag_name><![CDATA[spring-profile]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>14</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>anasayfa</wp:term_slug><wp:term_name><![CDATA[Anasayfa]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.4.2</generator>

	<item>
		<title>Hakkımda</title>
		<link>http://www.umitunal.net/about/</link>
		<pubDate>Wed, 03 Nov 2010 13:39:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http:/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[Hakkımıda
<strong>
<a title="http://www.linkedin.com/in/umitunal" href="http://www.linkedin.com/in/umitunal" target="_blank">http://www.linkedin.com/in/umitunal</a></strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2010-11-03 13:39:18</wp:post_date>
		<wp:post_date_gmt>2010-11-03 13:39:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[alpay]]></wp:comment_author>
			<wp:comment_author_email>alpaycom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.188.101.67</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 13:52:45</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 13:52:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba Ümit, Sayfanı incelediğimde mongodb ile ilgili çalışmaların olduğunu gördüm. Bu konuda bir sorunum var yardımcı olabilir misin?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345643565.1188";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346080940.5002";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346080930.0926";s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Python args ve kwargs örnekleri</title>
		<link>http://www.umitunal.net/?p=9</link>
		<pubDate>Wed, 03 Nov 2010 14:47:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[Python'da args ve kwargs kullanımına örnek vermek istedim.
<pre class="brush:python">

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2010-11-03 14:47:25</wp:post_date>
		<wp:post_date_gmt>2010-11-03 14:47:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-args-ve-kwargs-ornekleri</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[python-args-ve-kargs-ornekleri]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java&#039;da Gof Design Patterns kullanımı</title>
		<link>http://www.umitunal.net/?p=15</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2011-06-24 08:19:54</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Maven Encoding Problemi</title>
		<link>http://www.umitunal.net/maven-encoding-problemi/</link>
		<pubDate>Wed, 24 Aug 2011 10:48:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Maven ile projenizi build ederken aşağıdaki gibi Warning alabilirsiniz.<br />
<code><br />
[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!<br />
</code></p>
<p>Çözümü:<br />
pom.xml aşağıdaki properties tag'ini ekleyerek projenin build encoding'ini verebilirsiniz.<br />
<code><br />

<pre class="brush:xml">
<properties>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
</properties>
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2011-08-24 10:48:25</wp:post_date>
		<wp:post_date_gmt>2011-08-24 10:48:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-encoding-problemi</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="post_tag" nicename="maven-2"><![CDATA[maven]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Method Chaining Java</title>
		<link>http://www.umitunal.net/method-chaining-java/</link>
		<pubDate>Thu, 25 Aug 2011 10:55:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[Method chaining ( Method zincirlemesi )

<pre class="brush:java">
public class ProductDto {

	private String title;
	private String content;

	public ProductDto() {
	}

	public ProductDto setTitle(String title) {
		this.title = title;
		return this;
	}

	public String getTitle() {
		return title;
	}

	public ProductDto setContent(String content) {
		this.content = content;
		return this;
	}

	public String getContent() {
		return content;
	}

	@Override
	public String toString() {
		return "ProductDto [content=" + content + ", title=" + title + "]";
	}
}
</pre>

Test Edelim
<pre class="brush:java">
public class ProductDtoMethodChainingTest {
	public static void main(String[] args) {
		ProductDto dto = new ProductDto()
		dto.setTitle("Samsung Galaxy S2 ").setContent("OS:Android 2.3");
		System.out.println(dto.toString());
		
	}
}
</pre>

Method zincirlemesini kullandığımız bazı örnek yerler
<ul>
	<li>Hibernate Criteria Api</li>

	<li>jQuery</li>

</ul>


Örnek
<pre class="brush:javascript">
     $("p.article").addClass("showClass").show("slow");
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2011-08-25 10:55:49</wp:post_date>
		<wp:post_date_gmt>2011-08-25 10:55:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>method-chaining-java</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="method-chaining"><![CDATA[method chaining]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MongoDB çalışmak için örnek data</title>
		<link>http://www.umitunal.net/mongodb-icin-ornek-data/</link>
		<pubDate>Mon, 29 Aug 2011 18:45:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Mongodb öğrenmeye başladım.İlk iş olarak uzun süredir elimde olan screencast'leri izlemeye başladım.İlerledikçe artık elinizde data olmasını istiyorsunuz.Çünkü çoğu zaman denemek istediklerinizi yapamıyorsunuz.Aşağıdaki for döngüsü ile kendime sayıların karelerini alıp data yaratmaya çalışıyorum bir yere kadar.Bunu MongoDB shell'i üzerinden çalıştırdım.

<pre class="brush:javascript">
for(i=1;i<=1000;i++){
    db.squares.save({n:i,squares:i*i}) 
}
</pre>
Örnek data için <a href="http://media.mongodb.org/zips.json" title="http://media.mongodb.org/zips.json">http://media.mongodb.org/zips.json</a> bu linkdeki datayı indirebilirsiniz.

Peki bunu nasıl import edeceksiniz.
<pre class="brush:bash">
umitunal@umitunal:~$ mongoimport --db dbnizinadi --collection zips --file /home/umitunal/Desktop/zips.json
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2011-08-29 18:45:09</wp:post_date>
		<wp:post_date_gmt>2011-08-29 18:45:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongodb-icin-ornek-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="mongo"><![CDATA[Mongo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MongoDB için basit queryler</title>
		<link>http://www.umitunal.net/mongodb-icin-basit-queryler/</link>
		<pubDate>Mon, 29 Aug 2011 19:16:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[Mongodb kurduğunuz dizindeki bin klasöründeki "mongo" uygulamasını çalıştırın.Baştan söyliyim IPython kullananlar için sıkıntı bir durum mevcut.Tab tuşuna basınca yapınca tamamlamıyor :).
<pre class="brush: bash;">umitunal@umitunal:~$ mongo
MongoDB shell version: 1.4.4
url: test
connecting to: test
type "exit" to exit
type "help" for help
&gt;</pre>
Açılan shell ekranında biraz ısınma turu yapalım yetenekleri açısından.Aşağıdaki komutları sırasıyla deneyebilirsiniz.
<pre class="brush: bash;">&gt; x = 1
&gt; y = 2
&gt; x*y
&gt; x + y
&gt;"hello" + " mongodb"</pre>
Sonra hemen üzerinde çalışacağımız database'i seçelim.Önce show dbs komutu ile tüm db'leri görelim.İlk kurulumda default gelen db'ler aşağıdaki gibidir.

<!--more-->
<pre class="brush: bash;">
&gt; show dbs
admin
local
myfiles
test</pre>
Ben test db'si üzerinde çalışmak istiyorum.Eğer siz kendi db'inizi yaratmak isterseniz "use dbadi" komutunu çalıştırın.Bir sonraki örnekde yapıcağım kayıt işleminden sonra tekrar "show dbs" komutunu kullanarak kendi db'inizi görebilirsiniz.
<pre class="brush: bash;">&gt; use test
switched to db test</pre>
Aşağıdaki gibi json objemi people değişkenine atadım.
<pre class="brush: bash;">&gt; people = { first_name:"umit", 
             last_name:"unal", 
             skills:["Java","Python","Javascript"]
}
{
        "first_name" : "umit",
        "last_name" : "unal",
        "skills" : [
                "Java",
                "Python",
                "Javascript"
        ]
}</pre>
Şimdi kayıt işlemimizi yapalım.
<pre class="brush: bash;">&gt; db.people.save(people)</pre>
Kayıt işlemini yaptık.Kaydımızı listeleyim.
<pre class="brush: bash;">&gt; db.people.find()
{ "_id" : ObjectId("4e5be6e4d098e18871f831bc"), 
   "first_name" : "umit", "last_name" : "unal", 
   "skills" : [ "Java", "Python", "Javascript" ] }</pre>
Toplam kayıtı öğrenelim gerçekten kayıt etmişmiyiz.
<pre class="brush: bash;">&gt; db.people.count()
1</pre>
Evet 1 adet kayıt mevcut.

people collectionı için daha detaylı bir bilgi istiyorsanız.
<pre class="brush: bash;">&gt; db.people.stats()
{
        "ns" : "test.people",
        "count" : 1,
        "size" : 120,
        "storageSize" : 8192,
        "numExtents" : 1,
        "nindexes" : 1,
        "lastExtentSize" : 8192,
        "paddingFactor" : 1,
        "flags" : 1,
        "totalIndexSize" : 8192,
        "indexSizes" : {
                "_id_" : 8192
        },
        "ok" : 1
}</pre>
people collectionın da hangi alanlar da index mevcut?
<pre class="brush: bash;">&gt; db.people.getIndexes()
[
        {
                "name" : "_id_",
                "ns" : "test.people",
                "key" : {
                        "_id" : 1
                }
        }
]</pre>
people collectionı id alanı indexli sorun değil.Biz bir de first_name alanını indexlemek istersek?
<pre class="brush: bash;">&gt; db.people.ensureIndex({first_name:1})
&gt; db.people.getIndexes()
[
        {
                "name" : "_id_",
                "ns" : "test.people",
                "key" : {
                        "_id" : 1
                }
        },
        {
                "_id" : ObjectId("4e5d0d2ce22a7a64068f5769"),
                "ns" : "test.people",
                "key" : {
                        "first_name" : 1
                },
                "name" : "first_name_1"
        }
]</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2011-08-29 19:16:44</wp:post_date>
		<wp:post_date_gmt>2011-08-29 19:16:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongodb-icin-basit-queryler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[mongodb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Mongodb için örnek queryler- Ümit Ünal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Mongodb için örnek queryler]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[Ertu]]></wp:comment_author>
			<wp:comment_author_email>Ertugrulkablan@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>5.47.128.78</wp:comment_author_IP>
			<wp:comment_date>2013-04-08 16:45:45</wp:comment_date>
			<wp:comment_date_gmt>2013-04-08 16:45:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Güzel Yazi olmuş hocam devamını bekliyoruz]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1365442022.2069";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1365439546.0235";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Mongodb </title>
		<link>http://www.umitunal.net/?p=75</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2011-09-04 14:29:32</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dozer</title>
		<link>http://www.umitunal.net/?p=76</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[Dozer kısaca Java Bean to Java Bean mapper.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2011-10-10 19:30:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring 3.1 Profile Nedir?</title>
		<link>http://www.umitunal.net/spring-3-1-profile-nedir/</link>
		<pubDate>Sun, 22 Jan 2012 21:02:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[Genel de uygulamalarımızı  geliştirirken çeşitli development environment tanımlarına göre çalışma durumları oluyor. Neler bunlar  wikipedia üzerinden aldığım envoirment tanımları aşağıdaki listedeki gibi.Sizin kendi ihtiyaçlarınıza göre bu ortam tanımları değişebilir.

<a title="http://en.wikipedia.org/wiki/Development_environment" href="http://en.wikipedia.org/wiki/Development_environment" target="_blank">http://en.wikipedia.org/wiki/Development_environment</a>
<ul>
	<li>Local</li>
	<li>Virtual Machine</li>
	<li>Development</li>
	<li>Integration</li>
	<li>Test/QA</li>
	<li>UAT</li>
	<li>Stage/Pre-production</li>
	<li>Production/Live</li>
</ul>
Spring 3.1 ile birlikte   "@Profile" annotation eklendi.Spring ile uygulamanızı geliştirirken çeşitli environment durumlarına göre yönetmek açısından çok büyük kolaylıklar sağlıyor.Alternatif bir çok yol ile yapabilirsiniz.Ama zaten spring kullanıyorsunuz ve uygulamanızın environment ortamlarına göre farklı yöntemlerle yönetiyorsanız biraz garip olabilir.Zaten framework size bu kolaylığı sağlıyor.Gerçekten environment ortamlarına göre iş yapma da işinizi çok kolaylaştırabilecek bir özellik olduğuna inanıyorum.

<!--more-->

Bu annotationını nasıl kullanacağımızı basit bir örnekle anlatmak istiyorum hemen.Dev ve Prod ortamlarına göre ProductBean bize farklı ürün bilgileri dönücek.Spring konfigürasyonunu xml değil java tabanlı yapıcam.@Configuration annotation'ını ile java tabanlı konfigürasyon yapabilirsiniz.Xml tabanlı konfigürasyon sevmiyorsanız benim gibi güzel bir alternatif :).
<pre class="brush:java">/**
 * @author umitunal
 *
 */
public class ProductBean {

	private String category;
	private String title;

	public ProductBean() {}

	public ProductBean(String category, String title) {
		this.category = category;
		this.title = title;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

}</pre>
<pre class="brush:java">public interface BeanConfig {
	ProductBean getProductBean();
}</pre>
<pre class="brush:java">/**
 * @author umitunal
 *
 */
@Configuration
public class ApplicationContextConfig {

	@Autowired
	private BeanConfig beanConfig;

	@Bean
	public ProductBean getProductBean() {
		return beanConfig.getProductBean();
	}

}</pre>
<pre class="brush:java">public class ProfileEnvironment {

	public static final String PROD = "prod";
	public static final String DEV = "dev";

}</pre>
DevBeanConfig ile dev ortamı için ProductBean değerlerini tanımladık.
<pre class="brush:java">@Configuration
@Profile(value = ProfileEnvironment.DEV)
public class DevBeanConfig implements BeanConfig {

	@Bean
	public ProductBean getProductBean() {
		return new ProductBean("Cep Telefonu", "Samsung i9100 Galaxy S II");
	}

}</pre>
ProdBeanConfig ile prod ortamı için ProductBean değerlerini tanımladık.
<pre class="brush:java">@Configuration
@Profile(value=ProfileEnvironment.PROD)
public class ProdBeanConfig implements BeanConfig {

	@Bean
	public ProductBean getProductBean() {
		return new ProductBean("Apple", "Apple Iphone 4s");
	}

}</pre>
Tüm ortamların çalışdığını görmemiz açısından hemen basit bir test sınıfı içinde 2 ortam içinde testlerimizi yazdık.
<pre class="brush:java">public class BeanConfigTest {

	@Test
	public void testProdBeanConfig(){
		AnnotationConfigApplicationContext annotationConfigAC = new AnnotationConfigApplicationContext();
                //DefaultProfile'imizi Prod. olarak tanımladık.
		annotationConfigAC.getEnvironment().setDefaultProfiles(ProfileEnvironment.PROD);
                //Ve contextde @Configuration annationına sahip sınıflarımızı register ediyoruz.
		annotationConfigAC.register(ApplicationContextConfig.class,DevBeanConfig.class,ProdBeanConfig.class);
		annotationConfigAC.refresh();

		ProductBean productBean = annotationConfigAC.getBean(ProductBean.class);

		assertNotNull(productBean);
		assertEquals("Apple Iphone 4s", productBean.getTitle());
	}	

	@Test
	public void testDevBeanConfig() {
		AnnotationConfigApplicationContext annotationConfigAC = new AnnotationConfigApplicationContext();
		// DefaultProfile'imizi Dev. olarak tanımladık.
		annotationConfigAC.getEnvironment().setDefaultProfiles(ProfileEnvironment.DEV);
		// Ve contextde @Configuration annationına sahip sınıflarımızı register ediyoruz.
		annotationConfigAC.register(ApplicationContextConfig.class, DevBeanConfig.class, ProdBeanConfig.class);
		annotationConfigAC.refresh();

		ProductBean productBean = annotationConfigAC.getBean(ProductBean.class);

		assertNotNull(productBean);
		assertEquals("Samsung i9100 Galaxy S II", productBean.getTitle());
	}
}</pre>
Belki yazdığımız unit testleri gerçekten development environment tanımlarına göre çalıştırmamız gerekebilir.
Bu durumda @ActiveProfiles annotation'ını bize yardımcı oluyor.

<strong>@ActiveProfiles(profiles = "dev")</strong> unit test sınıfımızın başına bunu eklediğimiz zaman dev ortamı için gerekli profile tanımlarını yükler.Bir başka durum ise dev ve uat ortamım için aynı unit test çalışmasını istiyorsam <strong>@ActiveProfiles(profiles={"dev","uat"})</strong> şeklinde tanımlanız yeterli.Aşağıdaki örnek dev ortamı içindir.
<pre class="brush:java">@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = {ApplicationContextConfig.class,DevBeanConfig.class,ProdBeanConfig.class},loader=AnnotationConfigContextLoader.class)
@ActiveProfiles(profiles = "dev")
public class DevProfileBeanTest {

	private final Logger logger = LoggerFactory.getLogger(DevProfileBeanTest.class);

	@Autowired
	ApplicationContext applicationContext;

	@Test
	public void testDevProfile(){
		assertEquals("dev", applicationContext.getEnvironment().getActiveProfiles()[0]);
	}

	@Test
	public void testProductBean() {
		logger.info(" ==&gt; testProductBean " + applicationContext.getEnvironment().getActiveProfiles()[0]);
		ProductBean productBean = applicationContext.getBean(ProductBean.class);
		assertNotNull(productBean);
		assertEquals(productBean.getTitle(), "Samsung i9100 Galaxy S II");
	}

}</pre>
Aslında amaç örnek bir durumla bunu açıklamak gerekir ise dev ortamın da hsqldb yazdığınız bir logu prod ortamında mysql yazmak isteyebilirsiniz.Spring profile ile çeşitli development environment tanımlarınıza göre her şeyi yapabilirsiniz.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2012-01-22 21:02:09</wp:post_date>
		<wp:post_date_gmt>2012-01-22 21:02:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-3-1-profile-nedir</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="spring"><![CDATA[Spring]]></category>
		<category domain="post_tag" nicename="spring-2"><![CDATA[spring]]></category>
		<category domain="post_tag" nicename="spring-profile"><![CDATA[spring-profile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[haqen]]></wp:comment_author>
			<wp:comment_author_email>haqen@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.103.150.166</wp:comment_author_IP>
			<wp:comment_date>2012-01-22 22:06:41</wp:comment_date>
			<wp:comment_date_gmt>2012-01-22 22:06:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eline sağlık Ümit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Spring Framework MongoDB tutorial</title>
		<link>http://www.umitunal.net/?p=100</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[Spring Framework ile MongoDB entegrasyonu üzerine ve kullanımı için  makale yazmayı çok uzun zamandır düşünüyordum.Örnek bir uygulama yaparak anlatmayı düşünüyorum.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2012-03-26 13:40:54</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MongoDB ile Map Reduce Kullanımı</title>
		<link>http://www.umitunal.net/mongodb-map-reduce-kullanimi/</link>
		<pubDate>Sun, 13 May 2012 10:21:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://mongodb.org" target="_blank">MongoDB</a> document-oriented mimariye sahip <a href="http://en.wikipedia.org/wiki/NoSQL" target="_blank">NoSQL</a> veritabanıdır.MongoDB üzerinde bildiğimiz klasik veritabanlarındaki gibi tablo yapısına sahip değil.Verilerimizi <a href="http://bsonspec.org/" target="_blank">BSON</a> (Binary JSON) şeklinde tutuyor.Tablo yapısı yok onun yerine collectionlar mevcut.

Öncelikle Map Reduce kavramı hakkında bilgi edinmek isterseniz <a title="http://devveri.com/hadoop/mapreduce-nedir" href="http://devveri.com/hadoop/mapreduce-nedir" target="_blank">devveri.com</a> da <a title="http://www.linkedin.com/in/hakanilter" href="http://www.linkedin.com/in/hakanilter" target="_blank">Hakan İLTER</a>'in “Map Reduce Nedir” makalesini okumanız faydalı olur.

MongoDB üzerinde map reduce işlemlerini javascript ile yapılmaktadır.Klasik veritabanlarındaki <strong>count,sum,having</strong> gibi işlemleri yapmak için MongoDB üzerinde map reduce kullanıyoruz.

<!--more-->Örnek product collectionında bulunan verilerim aşağıdaki gibidir.

<script type="text/javascript" src="https://gist.github.com/2687228.js">// <![CDATA[
// <![CDATA[ // ]
// ]]]]><![CDATA[></script>

MongoDB üzerinde Map Reduce işlemlerini örneklerle anlatmak istiyorum.
<strong>Örnek 1 :</strong> Şimdi ürün tiplerine göre ürünlerin toplam fiyatını almak için örnek bir map reduce işlemi yapalım.
<script type="text/javascript" src="https://gist.github.com/2687602.js">// <![CDATA[

// ]]]]><![CDATA[></script>
Shirt ürünlerimizin toplamı 50, Sweat Shirt ise 95.

<strong>Örnek 2 :</strong> Ürünlerin sizelarına göre toplam kaç adet ürün bulunmakta onun hesaplamak için map reduce örneği aşağıdaki gibidir.
<script type="text/javascript" src="https://gist.github.com/2687758.js">// <![CDATA[

// ]]]]><![CDATA[></script>

<strong>Örnek 3 :</strong> Ürünlerin sizelarına göre bulunan ürünlerin toplam fiyatlarını hesaplamak için map reduce örneği aşağıdaki gibidir.
<script type="text/javascript" src="https://gist.github.com/2687931.js">// <![CDATA[

// ]]]]><![CDATA[></script>

L üründen 11 adet ve bu ürünlerin toplam fiyatı 215 TL
XL üründen 19 adet ve bu ürünlerin toplam fiyatı 450 TL
XXL üründen 24 adet ve bu ürünlerin toplam fiyatı 580 TL

<strong>Örnek 4 :</strong> Ürün tiplerine göre bulunan product collectionındaki idlerini bulmak için map reduce örneği aşağıdaki gibidir.
<script type="text/javascript" src="https://gist.github.com/2687992.js">// <![CDATA[

// ]]]]><![CDATA[></script>

<strong>Örnek 5: </strong> Hangi üründen hangi renklerden olduğunu bulabileceğeniz map reduce aşağıdaki gibidir.
<script type="text/javascript" src="https://gist.github.com/2688182.js">// <![CDATA[

// ]]]]><![CDATA[></script>

Sonuç olarak bir çok işlemi map reduce kullanarak MongoDB üzerinde yapabilirsiz.Eğer yapılan işlemleri trace etmek isterseniz "<strong>print('')</strong>" fonksiyonu ile yapabilirsiniz en nihayetinde bir javascript yazıyorsunuz.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2012-05-13 10:21:59</wp:post_date>
		<wp:post_date_gmt>2012-05-13 10:21:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mongodb-map-reduce-kullanimi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="mongo"><![CDATA[Mongo]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[mongodb mapreduce tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[MongoDB ile Map Reduce Kullanımı - Ümit Ünal]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[spring-data-mongodb-map-reduce-kullanimi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[umitunal]]></wp:comment_author>
			<wp:comment_author_email>umit.unal.89@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.94.42.24</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 14:33:26</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 14:33:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba Alpay,

1-)MongoDB versiyonu nedir ve kaç bit?
2-)Map reduce işlemini yaptığın collectionda indexli alanların var mı kontrol edebilirsin.? ( Örnek : db.collectionName.getIndexKeys() ) 
3-)Eğer yok ise http://www.mongodb.org/display/DOCS/Indexes buradan kendine uygun olan index stratejisini uygulaman gereklidir.
4-)Mongo sunucusunda map-reduce çalışdığı zaman ki cpu ve ram değerleri neler oluyor onları gözlemleyebilirsin.

Ayrıca  MongoDB üzerinde map-reduce halen single-threaded şekilde çalışıyor.Ama ileride javascript v8 geçerler ise ki geçmeyi planlıyor o zaman (https://jira.mongodb.org/browse/SERVER-4258) o zaman multi thread çalışıyor olucak.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>19</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345646006.2577";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Hamit]]></wp:comment_author>
			<wp:comment_author_email>hamitoglu.hamit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.75.152.154</wp:comment_author_IP>
			<wp:comment_date>2012-05-15 12:56:08</wp:comment_date>
			<wp:comment_date_gmt>2012-05-15 12:56:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ellerine sağlık hocam çok güzel bir yazı olmuş...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337086568.2904";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1340467483.2961";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337086614.7202";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_rechecking</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Mert Saraç]]></wp:comment_author>
			<wp:comment_author_email>mert.sarac@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.128.91.74</wp:comment_author_IP>
			<wp:comment_date>2012-08-10 09:17:43</wp:comment_date>
			<wp:comment_date_gmt>2012-08-10 09:17:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Çok başarılı bir yazı olmuş. Tebrikler!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344590264.5616";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1344590447.868";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[alpay]]></wp:comment_author>
			<wp:comment_author_email>alpaycom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.188.101.67</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 13:37:39</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 13:37:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba. Veritabanı olarak mongodb kullanıyorum. Bazı kısımlarda map-reduce kullanıyorum ama performans olarak çok yavaş çalışıyor. 100.000 civarı document var. Real-time olarak sorgu yapıyorum. Yani bir sayfam var onu her çağırdağında bu map-reduce sorgusu çalışıyor. Nasıl kullanmam gerekir böyle işlemlerde? php ile kullanıyorum. Ama aynı fonksiyonları shell üzerinden denediğimde de yavaş çalışıyor. 
Yardımcı olursanız sevirim.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345642659.6942";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345644778.9704";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Ali]]></wp:comment_author>
			<wp:comment_author_email>a@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.185.51.150</wp:comment_author_IP>
			<wp:comment_date>2012-07-12 18:38:02</wp:comment_date>
			<wp:comment_date_gmt>2012-07-12 18:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Döküman için sağolun ama aklima birşey takıldı.MongoDB ve map reduce yeniyim.MongoDB de map reduce sadece count,sum,having gibi işlemler içinmi kullaniliyor,diğer işlemleri normal queryler ile halledilebilir mi?.Yoksa veriler çok büyük bir boyuta geldiktenten sonra hep map reduce'mu kullanmalıyız]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342118282.7342";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342177326.5532";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[umitunal]]></wp:comment_author>
			<wp:comment_author_email>umit.unal.89@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.94.42.24</wp:comment_author_IP>
			<wp:comment_date>2012-07-13 11:02:06</wp:comment_date>
			<wp:comment_date_gmt>2012-07-13 11:02:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba Ali,

Map-Reduce işlemini count,sum,having gibi queryleri MongoDB'de kullanmak için kullandığımız bir yöntem.Yoksa istersen sende programatik olarak bu işlemi yapabilirsin.Dataların büyümesi ile ilgili bir ihtiyaç değil map-reduce kullanımı.Sadece sana gerekli olan datayı en iyi yolda elde etmene yardımcı olan bir pattern.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>13</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342177326.5368";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Ali]]></wp:comment_author>
			<wp:comment_author_email>a@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.185.51.150</wp:comment_author_IP>
			<wp:comment_date>2012-07-13 11:39:30</wp:comment_date>
			<wp:comment_date_gmt>2012-07-13 11:39:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cevabinizi için teşekkür ederim, bu çok iyi oldu.Uzun zamandir kafami kurcaliyordu]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342179570.9849";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[umitunal]]></wp:comment_author>
			<wp:comment_author_email>umit.unal.89@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.94.42.24</wp:comment_author_IP>
			<wp:comment_date>2012-07-13 11:44:03</wp:comment_date>
			<wp:comment_date_gmt>2012-07-13 11:44:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rica ederim.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>15</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342179843.6906";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[alpay]]></wp:comment_author>
			<wp:comment_author_email>alpaycom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.188.101.67</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 14:47:28</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 14:47:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mongodb 2.0.7 .
php ile kullanıyorum.

indexli alana ihtiyaç duymadım çünkü harhangi bir alanı sorgulamıyorum.Count işlemi yapıyorum sadece. Her document içinde bir tane dizi var, bu dizinin elaman sayısını ve id'sinin geri dönmesini istiyorum.Sadece _id alanı indexli. Kod şu şekilde.

$map = new MongoCode("function() {			
			emit(this._id,{
				'_id':this._id,'cd':this.cd,'msgCount':this.cs[0].msgs.length}
			);
		}");
	
		$reduce = new MongoCode("function(k, vals) {
			return vals[0];
		}");
		
		if (isset($sessionId))
			$query=Array('_id'=&gt;new MongoId($sessionId));
			
		$cmmd = smongo::$db-&gt;command(array(
			"mapreduce" =&gt; "sessions", 
			"map" =&gt; $map,
			"reduce" =&gt; $reduce,
			"out" =&gt; "result"));

Sonuç olarak bu dönüyor. Oldukça yavaş.

 Array
(
    [result] =&gt; result
    [timeMillis] =&gt; 29452
    [counts] =&gt; Array
        (
            [input] =&gt; 106026
            [emit] =&gt; 106026
            [reduce] =&gt; 0
            [output] =&gt; 106026
        )
 
    [ok] =&gt; 1
)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>21</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345646848.8655";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[umitunal]]></wp:comment_author>
			<wp:comment_author_email>umit.unal.89@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.94.42.24</wp:comment_author_IP>
			<wp:comment_date>2012-08-22 15:37:06</wp:comment_date>
			<wp:comment_date_gmt>2012-08-22 15:37:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba istediğin map-reduce aşağıdaki gibi.Bir dener misin?
<code>
map = function(){
	emit(this._id,{'id':this._id,'msgCount':this.cs[0].msgs.length});
}
reduce = function reduce(key,values){
    var result = { id: values[0], msgCount: values[1] };
    return result;
}
</code>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345649826.7977";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[alpay]]></wp:comment_author>
			<wp:comment_author_email>alpaycom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.188.101.67</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 06:24:59</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 06:24:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba denedim. Yine çok yavaş.
 Array
(
    [result] =&gt; result
    [timeMillis] =&gt; 11427
    [counts] =&gt; Array
        (
            [input] =&gt; 106027
            [emit] =&gt; 106027
            [reduce] =&gt; 0
            [output] =&gt; 106027
        )
 
    [ok] =&gt; 1
)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346080901.2786";s:7:"message";s:46:"admin changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346080903.3886";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345703099.6877";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[umitunal]]></wp:comment_author>
			<wp:comment_author_email>umit.unal.89@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.94.42.24</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 14:29:06</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 14:29:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merhaba,

Datalarını ve datalarının büyüklüğünü bilmiyorum tam olarak.Ama son kullanıcıya çıkan her sayfaya istek yapıldığında kritersiz bir şekilde mapreduce yapman bu arada düşündürücü.Her istek de map reduce işlemi yapmanı gerektirecek olan durumu değiştirmen gerekli bence.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>24</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345732146.1983";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hazelcast &amp; Spring Framework Entegrasyonu</title>
		<link>http://www.umitunal.net/hazelcast-ve-spring-framework-entegrasyonu/</link>
		<pubDate>Thu, 21 Jun 2012 19:18:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="Hazelcast" href="http://www.hazelcast.com/">Hazelcast</a> ile <a title="http://www.springsource.org/" href="http://www.springsource.org/">Spring Framework</a> entegrasyonu oldukça kolay ve basit.Hazelcast hakkında detaylı bilgi edinmek için <a href="http://tr.linkedin.com/in/hakanilter" title="Hakan İlter">Hakan İLTER</a>'in yazdığı <a title="Hazelcast – Veri Dağıtım Sanatı" href="http://devveri.com/olceklenebilirlik/hazelcast-veri-dagitim-sanati">Hazelcast – Veri Dağıtım Sanatı</a> yazısını okumanızı tavsiye ederim.
Hazelcast Spring Framework entegrasyonu için "hazelcast-spring" projesi bulunmaktadır.Maven projenize aşağıdaki gibi dependencyleri eklemeniz yeterlidir.

<!--more-->

<script src="https://gist.github.com/2967840.js"> </script>

Aşağıdaki gibi applicationContext-Hazelcast.xml'e hazelcast namespace taglerini ekliyoruz.Sonra bunları tanımladıktan sonra hazelcast ayarlarını yaparken eclipse kendisi autocomplete olarak tanımları yapmanıza yardımcı oluyor.Klasik hazelcast.xml için yaptığımız tanımları applicationContext-Hazelcast.xml de yapıyoruz aslında.

Daha detaylı Spring Entegrasyonu için Hazelcast <a href="http://www.hazelcast.com/docs/2.1/manual/single_html/#SpringIntegration" title="http://www.hazelcast.com/docs/2.1/manual/single_html/#SpringIntegration">dökümantasyonun</a> da bulabilirsiniz.
<script src="https://gist.github.com/2967924.js"> </script>


Tanımladığımız Hazelcast instance'ı ve productMap için yazdığımız testleri geçerse uygulamanız Hazelcast sorunsuz bir şekilde entegre olmuşunuzdur.
<script type="text/javascript" src="https://gist.github.com/2978447.js"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2012-06-21 19:18:59</wp:post_date>
		<wp:post_date_gmt>2012-06-21 19:18:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hazelcast-ve-spring-framework-entegrasyonu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="configuration"><![CDATA[configuration]]></category>
		<category domain="post_tag" nicename="hazelcast"><![CDATA[hazelcast]]></category>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="spring-2"><![CDATA[spring]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[spring framework, hazelcast]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Hazelcast & Spring Entegrasyonu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Hazelcast ve Spring Entegrasyonu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Osman]]></wp:comment_author>
			<wp:comment_author_email>hamitoglu.hamit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.128.91.74</wp:comment_author_IP>
			<wp:comment_date>2012-09-03 15:51:37</wp:comment_date>
			<wp:comment_date_gmt>2012-09-03 15:51:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Çok teşekkürler. Çok faydalı bir yazı olmuş. Devamını bekleriz :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1346687497.9376";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1348929408.3852";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Home</title>
		<link>http://www.umitunal.net/home/</link>
		<pubDate>Sun, 24 Jun 2012 11:16:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2012-06-24 11:16:48</wp:post_date>
		<wp:post_date_gmt>2012-06-24 11:16:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="anasayfa"><![CDATA[Anasayfa]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[192]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.umitunal.net/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.umitunal.net/193/</link>
		<pubDate>Sun, 24 Jun 2012 11:16:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2012-06-24 11:16:49</wp:post_date>
		<wp:post_date_gmt>2012-06-24 11:16:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>193</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="anasayfa"><![CDATA[Anasayfa]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hibernate &amp; Spring ve Aspect ile ActiveRecord Pattern implementasyonu</title>
		<link>http://www.umitunal.net/hibernate-spring-ile-activerecord-pattern/</link>
		<pubDate>Fri, 05 Oct 2012 19:06:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.umitunal.net/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[Geliştirdiğimiz uygulamalarda <a title="DAO_Pattern" href="http://en.wikipedia.org/wiki/DAO_Pattern" target="_blank">DAO</a> veya <a title="http://en.wikipedia.org/wiki/Facade_pattern" href="http://en.wikipedia.org/wiki/Facade_pattern" target="_blank">Façade</a> patternleri üzerinden veritabanı işlemlerimizi soyutlaştırarak diğer katmanların veritabanı ile olan bağımlılıklarını ortadan kaldırıyoruz.Soyutlaştırmadan anlatmak istediğim mimarimizdeki katmanların artık veritabanı işlemleri için bir interface üzerinden işlemleri yapabiliyor olması.Bu sayede uygulamamızda istediğimiz esnekliğe sahip olabiliriz.Aslında "<strong>Coding to Interfaces</strong>" yaklaşımı.

Active Record patternini <a title="Martin_Fowler" href="http://en.wikipedia.org/wiki/Martin_Fowler" target="_blank">Martin Fowler</a> tarafından isimlendirilmiştir.Active Record pattern sayesinde modellerimiz üzerinden direk veritabanı ile ilgili olan işlemlerimizi yaptığımız wrapper bir sınıfı gibi oluyor.Active Record pattern  kullanan bir çok ORM framework'ü mevcut.Hibernate ise en yakın olan pattern <a title="http://en.wikipedia.org/wiki/Datamapper" href="http://en.wikipedia.org/wiki/Datamapper" target="_blank">Datamapper</a> pattern kullanmaktadır.
<!--more-->
Bu ihtiyaç ise uzun zamandır django modeller üzerinden veritabanı işlemleri yapıyor olmam idi.Peki bunu java da nasıl implemente ederim derken araştırıp bulup java ile yapabiliyor olmam çok hoşuma gitti.

Daha iyi anlatmak için aşağıdaki örneği incelemekte faydalı olur diye düşünüyorum

Country modelim var.Country modelim üzerinden artık veritabanı işlemleri  yapmak istiyorum.

Country.findAll() yapmak istediğimde bana tüm Countryleri dönmesini istiyorum.
<pre class="lang:java decode:true" title="Country Model">import javax.persistence.*;

/**
 * Created by IntelliJ IDEA.
 * User: umitunal
 */
@Entity
@Table(name = "country")
public class Country {

    @Id
    @Column(name="COUNTRY_ID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Column(name = "COUNTRY_CODE")
    private String code;

    @Column(name ="COUNTRY_NAME")
    private String name;

    public Country() {}

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}</pre>
<pre class="lang:java decode:true" title="CountryPersistence">import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.Entity;
import java.util.List;

/**
 * Created by IntelliJ IDEA.
 * User: umitunal
 */
public aspect CountryPersistence {

    declare @type: Country: @Configurable;

    declare @type: Country: @Entity;

    @Autowired
    private transient SessionFactory Country.sessionFactory;

    @Transactional
    public void Country.persist() {
        sessionFactory.openSession().save(this);
    }

    @Transactional(readOnly = true)
    public static List&lt;Country&gt; Country.findAll() {
        return new Country().sessionFactory.openSession().createCriteria(Country.class).list();
    }

    @Transactional(readOnly = true)
    public static Country Country.findById(Long id) {
        return (Country) new Country().sessionFactory.openSession().get(Country.class,id);
    }

}</pre>
<pre class="lang:java decode:true" title="ApplicationContext">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"&gt;

    &lt;context:spring-configured/&gt;

    &lt;bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt;
        &lt;property name="driverClassName" value="org.hsqldb.jdbcDriver" /&gt;
        &lt;property name="url" value="jdbc:hsqldb:mem:mydb" /&gt;
        &lt;property name="username" value="sa" /&gt;
        &lt;property name="password" value="" /&gt;
    &lt;/bean&gt;

    &lt;bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"&gt;
        &lt;property name="dataSource" ref="dataSource"/&gt;
        &lt;property name="packagesToScan" value="org.umitunal.model" /&gt;
        &lt;property name="hibernateProperties"&gt;
            &lt;props&gt;
                &lt;prop key="hibernate.dialect"&gt;org.hibernate.dialect.HSQLDialect&lt;/prop&gt;
                &lt;prop key="hibernate.show_sql"&gt;true&lt;/prop&gt;
                &lt;prop key="hibernate.format_sql"&gt;true&lt;/prop&gt;
                &lt;prop key="hibernate.hbm2ddl.auto"&gt;update&lt;/prop&gt;
            &lt;/props&gt;
        &lt;/property&gt;

    &lt;/bean&gt;

    &lt;bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"&gt;
        &lt;property name="sessionFactory" ref="hibernateSessionFactory"/&gt;
    &lt;/bean&gt;

    &lt;tx:annotation-driven mode="aspectj" /&gt;

&lt;/beans&gt;</pre>
<pre class="lang:java decode:true" title="CountryTest">import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.TestExecutionListeners;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.support.DependencyInjectionTestExecutionListener;
import org.springframework.test.context.transaction.TransactionConfiguration;
import org.springframework.transaction.annotation.Transactional;
import org.umitunal.model.Country;

import java.util.UUID;

import static junit.framework.Assert.assertEquals;
import static junit.framework.Assert.assertNotNull;

/**
 * Created by IntelliJ IDEA.
 * User: umitunal
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:application-context.xml" })
@TestExecutionListeners({DependencyInjectionTestExecutionListener.class})
@TransactionConfiguration(transactionManager = "transactionManager", defaultRollback = true)
@Transactional
public class CountryTest {

    @Before
    public void setUp()  {
      for (int i = 1; i&lt;=100;i++){
          String name = UUID.randomUUID().toString();
          String code = UUID.randomUUID().toString();
          new Country(name, code).persist();
      }
    }

    @Test
    public void testFindAll() {
         assertEquals(100, Country.findAll().size());
    }

    @Test
    public void testFindById() throws Exception {
        for (Country country : Country.findAll()) {
            assertNotNull(country.getId());
            Country expectedCountry = Country.findById(country.getId());
            assertNotNull(expectedCountry);
        }
    }
}</pre>

 
<pre class="lang:java decode:true " title="pom.xml" >&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;spring-activerecords-patterns&lt;/groupId&gt;
    &lt;artifactId&gt;spring-activerecords-patterns&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;

        &lt;java.version&gt;1.6&lt;/java.version&gt;
        &lt;maven-aspectj-plugin.version&gt;1.2&lt;/maven-aspectj-plugin.version&gt;
        &lt;maven-compiler-plugin.version&gt;2.3.2&lt;/maven-compiler-plugin.version&gt;
        &lt;maven-surefire-plugin.version&gt;2.10&lt;/maven-surefire-plugin.version&gt;

        &lt;aspectj.version&gt;1.6.12&lt;/aspectj.version&gt;
        &lt;gclib.version&gt;2.2.2&lt;/gclib.version&gt;

        &lt;hibernate.version&gt;4.1.5.Final&lt;/hibernate.version&gt;
        &lt;hsqldb.version&gt;1.8.0.10&lt;/hsqldb.version&gt;
        &lt;spring.version&gt;3.1.2.RELEASE&lt;/spring.version&gt;

        &lt;junit.version&gt;4.10&lt;/junit.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
            &lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;
            &lt;version&gt;${aspectj.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;cglib&lt;/groupId&gt;
            &lt;artifactId&gt;cglib&lt;/artifactId&gt;
            &lt;version&gt;${gclib.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;
            &lt;version&gt;${spring.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;
            &lt;version&gt;${spring.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;
            &lt;version&gt;${spring.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;
            &lt;version&gt;${spring.version}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;
            &lt;version&gt;${hibernate.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hsqldb&lt;/groupId&gt;
            &lt;artifactId&gt;hsqldb&lt;/artifactId&gt;
            &lt;version&gt;2.2.8&lt;/version&gt;
        &lt;/dependency&gt;


        &lt;dependency&gt;
            &lt;groupId&gt;junit&lt;/groupId&gt;
            &lt;artifactId&gt;junit&lt;/artifactId&gt;
            &lt;version&gt;${junit.version}&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
                &lt;version&gt;${maven-compiler-plugin.version}&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;
                    &lt;source&gt;${java.version}&lt;/source&gt;
                    &lt;target&gt;${java.version}&lt;/target&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
                &lt;artifactId&gt;aspectj-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;1.2&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;outxml&gt;true&lt;/outxml&gt;
                    &lt;aspectLibraries&gt;
                        &lt;aspectLibrary&gt;
                            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
                            &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;
                        &lt;/aspectLibrary&gt;
                    &lt;/aspectLibraries&gt;
                    &lt;complianceLevel&gt;${java.version}&lt;/complianceLevel&gt;
                &lt;/configuration&gt;
                &lt;dependencies&gt;
                    &lt;dependency&gt;
                        &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
                        &lt;artifactId&gt;aspectjrt&lt;/artifactId&gt;
                        &lt;version&gt;${aspectj.version}&lt;/version&gt;
                    &lt;/dependency&gt;
                    &lt;dependency&gt;
                        &lt;groupId&gt;org.aspectj&lt;/groupId&gt;
                        &lt;artifactId&gt;aspectjtools&lt;/artifactId&gt;
                        &lt;version&gt;${aspectj.version}&lt;/version&gt;
                    &lt;/dependency&gt;
                &lt;/dependencies&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;compile&lt;/goal&gt;
                            &lt;goal&gt;test-compile&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;

            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
                &lt;version&gt;${maven-surefire-plugin.version}&lt;/version&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;</pre> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2012-10-05 19:06:41</wp:post_date>
		<wp:post_date_gmt>2012-10-05 19:06:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hibernate-spring-ile-activerecord-pattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_487cc14003713c6be6725f6572a94631</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9d739e8b4b1d00b51f1b409e3f86e316</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8920ac5bf5f8a5ef5251d7c506c8a19f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_138c8c3ed2e9826e38134df0ea5db96d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ebf4e5c7ef3a939fe9deb8b020ba0a1f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_408b0ab8e0d3e6a9d7406a5ffc679125</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_45de03f770a7d2fd382c0fb81c365a8c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0547abe29bcae2f8fc7e3f0f9752c0c2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5550f9675d19594198fcaafd15990a57</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_978fbf4184d945441502a02bf8025d41</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
